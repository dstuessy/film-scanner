###################
# setup stage
###################

FROM --platform=linux/amd64 dstuessy/opencv:amd64 AS opencv-base
LABEL maintainer="dstuessy"

RUN apt-get update && apt-get install -y --no-install-recommends libc6 libc6-dev
WORKDIR /opencv-download/opencv-${OPENCV_VERSION}/build
RUN make preinstall
RUN make install
RUN ldconfig
# RUN echo "$(pkg-config --libs --static opencv4)" > /tmp/opencv4_ldflags
# RUN sed -i 's/-lIconv::Iconv/-liconv/' /tmp/opencv4_ldflags
# RUN pkg-config --libs libc6-dev >> /tmp/opencv4_ldflags
# RUN echo "$(pkg-config --cflags --static opencv4)" > /tmp/opencv4_cflags
# RUN pkg-config --cflags libc6-dev >> /tmp/opencv4_cflags

###################
# go build stage
###################

FROM opencv-base as film-scanner-build

# RUN cat /tmp/opencv4_ldflags
# RUN cat /tmp/opencv4_cflags
RUN mkdir /app
COPY . /app
WORKDIR /app
RUN go mod download
# RUN env CGO_ENABLED=1 \
# CGO_CFLAGS="$(cat /tmp/opencv4_cflags)" \
# CGO_CXXFLAGS="$(cat /tmp/opencv4_cflags)" \
# CGO_LDFLAGS="$(cat /tmp/opencv4_ldflags)" \
# CGO_CPPFLAGS="$(cat /tmp/opencv4_cflags)" \
# RUN env CGO_CXXFLAGS="-std=c++11" go build -v -tags static -ldflags='-linkmode external -extldflags "-static"'
# RUN env CGO_CPPFLAGS="-I/usr/local/include -I/usr/local/include/opencv4" \ 
# CGO_LDFLAGS="-I/usr/local/include/opencv4 -L/usr/local/lib -L/usr/local/lib/opencv4/3rdparty -lopencv_gapi -lopencv_stitching -lopencv_aruco -lopencv_bgsegm -lopencv_bioinspired -lopencv_ccalib -lopencv_dnn_objdetect -lopencv_dpm -lopencv_face -lopencv_fuzzy -lopencv_hfs -lopencv_img_hash -lopencv_line_descriptor -lopencv_quality -lopencv_reg -lopencv_rgbd -lopencv_saliency -lopencv_stereo -lopencv_structured_light -lopencv_phase_unwrapping -lopencv_superres -lopencv_optflow -lopencv_surface_matching -lopencv_tracking -lopencv_datasets -lopencv_text -lopencv_highgui -lopencv_dnn -lopencv_plot -lopencv_videostab -lopencv_video -lopencv_videoio -lopencv_xfeatures2d -lopencv_shape -lopencv_ml -lopencv_ximgproc -lopencv_xobjdetect -lopencv_objdetect -lopencv_calib3d -lopencv_imgcodecs -lopencv_features2d -lopencv_flann -lopencv_xphoto -lopencv_photo -lopencv_imgproc -lopencv_core -littnotify -llibprotobuf -lIlmImf -lquirc -lippiw -lippicv -lade -lz -ljpeg -ldl -lm -lpthread -lrt -lopenblas -lquadmath -linference_engine_s -lpugixml -lngraph -lgfortran -ltbb" \ 
# go build -v -tags customenv,static -ldflags='-extldflags "-static"'
RUN go build -v -tags static -ldflags='-linkmode external -extldflags "-static"'
# RUN go build -v
# go build -v -ldflags="-s"
# go build -v -tags customenv -ldflags='-linkmode external -extldflags "-static"'

CMD ["echo", "Build complete!"]

###################
# build output stage
###################

FROM film-scanner-build as film-scanner-output

COPY --from=film-scanner-build /app/film-scanner tmp/film-scanner

CMD ["echo", "files exported"]
