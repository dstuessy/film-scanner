###################
# arm32v7 build stage
###################

FROM --platform=linux/arm32v7 arm32v7/golang:1.22-bullseye AS opencv-base-arm32v7
LABEL maintainer="dstuessy"

RUN apt-get update && apt-get install -y --no-install-recommends \
            git sudo build-essential cmake pkg-config unzip libgtk2.0-dev \
            curl ca-certificates libcurl4-openssl-dev libssl-dev \
            libavcodec-dev libavformat-dev libswscale-dev libtbb2 libtbb-dev \
            libjpeg62-turbo-dev libpng-dev libtiff-dev libdc1394-22-dev && \
            rm -rf /var/lib/apt/lists/*

###################
# library build stage
###################

FROM --platform=linux/arm32v7 opencv-base-arm32v7 AS opencv-build-arm32v7

RUN mkdir /gocv-download
WORKDIR /gocv-download
RUN wget -O gocv.tar.gz https://github.com/hybridgroup/gocv/archive/refs/tags/v0.35.0.tar.gz
RUN tar -xvf gocv.tar.gz
WORKDIR /gocv-download/gocv-0.35.0
RUN make deps
RUN make download
RUN make build_raspi BUILD_SHARED_LIBS=OFF
RUN make sudo_install
RUN make clean
RUN go run ./cmd/version/main.go
CMD ["go", "run", "./cmd/version/main.go"]
# RUN make install BUILD_SHARED_LIBS=OFF

###################
# go build stage
###################

FROM opencv-build-arm32v7 as film-scanner-arm32v7-build

RUN mkdir /app
COPY . /app
WORKDIR /app
RUN go mod download
RUN go build -v

CMD ["echo", "Build complete!"]

###################
# build output stage
###################

FROM film-scanner-arm32v7-build as film-scanner-arm32v7-output

COPY --from=film-scanner-arm32v7-build /app/film-scanner .

CMD ["echo", "files exported"]
