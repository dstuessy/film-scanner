###################
# amd64 setup stage
###################

FROM --platform=linux/amd64 amd64/golang:1.22-bullseye AS opencv-base
LABEL maintainer="dstuessy"

RUN apt-get update && apt-get install -y --no-install-recommends \
            git build-essential cmake pkg-config unzip libgtk2.0-dev \
            curl ca-certificates libcurl4-openssl-dev libssl-dev \
            libavcodec-dev libavformat-dev libswscale-dev libtbb2 libtbb-dev \
            libjpeg62-turbo-dev libpng-dev libtiff-dev libdc1394-22-dev

###################
# opencv build stage
###################

FROM opencv-base AS opencv-build

ARG OPENCV_VERSION="4.8.1"
ENV OPENCV_VERSION $OPENCV_VERSION
ARG OPENCV_FILE="https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.zip"
ENV OPENCV_FILE $OPENCV_FILE
ARG OPENCV_CONTRIB_FILE="https://github.com/opencv/opencv_contrib/archive/${OPENCV_VERSION}.zip"
ENV OPENCV_CONTRIB_FILE $OPENCV_CONTRIB_FILE
RUN mkdir /opencv-download
WORKDIR /opencv-download
RUN curl -Lo opencv.zip ${OPENCV_FILE} && \
            unzip -q opencv.zip && \
            curl -Lo opencv_contrib.zip ${OPENCV_CONTRIB_FILE} && \
            unzip -q opencv_contrib.zip && \
            rm opencv.zip opencv_contrib.zip
RUN mkdir opencv-${OPENCV_VERSION}/build
WORKDIR /opencv-download/opencv-${OPENCV_VERSION}/build
RUN cmake -D CMAKE_BUILD_TYPE=RELEASE \
  -D CMAKE_INSTALL_PREFIX=/usr/local \
  -D BUILD_SHARED_LIBS=OFF \
  -D ENABLE_CXX11=ON \
  -D OPENCV_EXTRA_MODULES_PATH=../../opencv_contrib-${OPENCV_VERSION}/modules \
  -D BUILD_DOCS=OFF \
  -D BUILD_EXAMPLES=OFF \
  -D BUILD_TESTS=OFF \
  -D BUILD_PERF_TESTS=ON \
  -D BUILD_opencv_java=NO \
  -D BUILD_opencv_python=NO \
  -D BUILD_opencv_python2=NO \
  -D BUILD_opencv_python3=NO \
  -D WITH_JASPER=OFF \
  -D WITH_TBB=ON \
  -D ENABLE_FAST_MATH=1 \
  -D OPENCV_GENERATE_PKGCONFIG=ON ..
RUN make -j $(nproc --all)

CMD ["echo", "Build complete!"]
